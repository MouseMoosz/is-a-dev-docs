{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"How to register You can read more about the domains JSON file structure here . Guides GitHub Pages Hashnode Blogs Other services Vercel and Netlify You will encounter an SSL certificate issue when using Vercel and Netlify. Neither service will work with our domains. It is recommend to use Github Pages or Railway instead.","title":"Home"},{"location":"#how-to-register","text":"You can read more about the domains JSON file structure here .","title":"How to register"},{"location":"#guides","text":"GitHub Pages Hashnode Blogs Other services","title":"Guides"},{"location":"#vercel-and-netlify","text":"You will encounter an SSL certificate issue when using Vercel and Netlify. Neither service will work with our domains. It is recommend to use Github Pages or Railway instead.","title":"Vercel and Netlify"},{"location":"domain_structure/","text":"Domains JSON file The way to register a subdomain is through a pull request. For example, to register example.is-a.dev , you would need to create a file named domains/example.json . Filename Note : You can put . (dots) in your filename for registering a sub-subdomain ( blog.example.is-a.dev ) however, each of the following criteria must be valid for all part of your subdomain The filename must pass the following criteria: Must be alpha-numeric in lowercase with dashes as seperators. Must be more than 2 characters long. Must have a .json file extension Structure owner (required) You need to specify some information about yourself here. This is so that you can be contacted if required. In the owner object, the fields username and email are required. You can add more information in this object if you want. { \"owner\" : { \"username\" : \"<github-username>\" , \"email\" : \"email@address\" } } If you don't wish to share your email address here, please share your twitter or discord or any other social media account. { \"owner\" : { \"username\" : \"<github-username>\" , \"email\" : \"\" , \"twitter\" : \"twitter-handle\" , \"discord\" : \"discord-username-and-discriminator\" } } description Describe your domain name and your usage. This is purely for documentation purpose and is optional. repo This is a link to your website repository or your github account. This is purely for documentation purpose and is optional. record (required) This is where you specify the DNS records. The supported types are: CNAME A URL MX TXT Below are some examples for the given record types: CNAME record must be a hostname ( something.tld ), it cannot be used in conjunction with any other record types. { \"record\" : { \"CNAME\" : \"<github-username>.github.io\" } } A record must be a list of IPv4 addresses. { \"record\" : { \"A\" : [ \"999.999.991.999\" , \"999.999.992.999\" , \"999.999.993.999\" , \"999.999.994.999\" ] } } URL redirection { \"record\" : { \"URL\" : \"https://my-other-website.com\" } } MX record must be a list of hostnames. { \"record\" : { \"MX\" : [ \"mx1.improvmx.com\" , \"mx2.improvmx.com\" ] } } TXT record can be any string value. You can only have 1 TXT record. { \"record\" : { \"TXT\" : \"hello world\" } }","title":"Domain Structure"},{"location":"domain_structure/#domains-json-file","text":"The way to register a subdomain is through a pull request. For example, to register example.is-a.dev , you would need to create a file named domains/example.json .","title":"Domains JSON file"},{"location":"domain_structure/#filename","text":"Note : You can put . (dots) in your filename for registering a sub-subdomain ( blog.example.is-a.dev ) however, each of the following criteria must be valid for all part of your subdomain The filename must pass the following criteria: Must be alpha-numeric in lowercase with dashes as seperators. Must be more than 2 characters long. Must have a .json file extension","title":"Filename"},{"location":"domain_structure/#structure","text":"","title":"Structure"},{"location":"domain_structure/#owner-required","text":"You need to specify some information about yourself here. This is so that you can be contacted if required. In the owner object, the fields username and email are required. You can add more information in this object if you want. { \"owner\" : { \"username\" : \"<github-username>\" , \"email\" : \"email@address\" } } If you don't wish to share your email address here, please share your twitter or discord or any other social media account. { \"owner\" : { \"username\" : \"<github-username>\" , \"email\" : \"\" , \"twitter\" : \"twitter-handle\" , \"discord\" : \"discord-username-and-discriminator\" } }","title":"owner (required)"},{"location":"domain_structure/#description","text":"Describe your domain name and your usage. This is purely for documentation purpose and is optional.","title":"description"},{"location":"domain_structure/#repo","text":"This is a link to your website repository or your github account. This is purely for documentation purpose and is optional.","title":"repo"},{"location":"domain_structure/#record-required","text":"This is where you specify the DNS records. The supported types are: CNAME A URL MX TXT Below are some examples for the given record types: CNAME record must be a hostname ( something.tld ), it cannot be used in conjunction with any other record types. { \"record\" : { \"CNAME\" : \"<github-username>.github.io\" } } A record must be a list of IPv4 addresses. { \"record\" : { \"A\" : [ \"999.999.991.999\" , \"999.999.992.999\" , \"999.999.993.999\" , \"999.999.994.999\" ] } } URL redirection { \"record\" : { \"URL\" : \"https://my-other-website.com\" } } MX record must be a list of hostnames. { \"record\" : { \"MX\" : [ \"mx1.improvmx.com\" , \"mx2.improvmx.com\" ] } } TXT record can be any string value. You can only have 1 TXT record. { \"record\" : { \"TXT\" : \"hello world\" } }","title":"record (required)"},{"location":"github_pages/","text":"Setting up GitHub pages with is-a.dev subdomain Creating a GitHub pages repository You can create a GitHub pages website by creating a repository with the name <github-username>.github.io . For more information about GitHub pages, please read through their guide . Creating the domain file Create a JSON file inside domains directory ( domains/<subdomain>.json ) with the following content { \"description\" : \"Describe the use of this subdomain\" , \"repo\" : \"https://github.com/<github-username>/<github-username>.github.io\" , \"owner\" : { \"username\" : \"<github-username>\" , \"email\" : \"email@address\" , \"twitter\" : \"<twitter-username>\" }, \"record\" : { \"CNAME\" : \"<username>.github.io\" } } Configuring After the pull request is merged, you will see a 404 error on <your-subdomain>.is-a.dev . To fix this, go to your GitHub pages repository's Settings > GitHub pages > Custom domain and add <your-subdomain>.is-a.dev in the given field. Check the Enforce HTTPS checkbox below the custom domain input.","title":"GitHub Pages"},{"location":"github_pages/#setting-up-github-pages-with-is-adev-subdomain","text":"","title":"Setting up GitHub pages with is-a.dev subdomain"},{"location":"github_pages/#creating-a-github-pages-repository","text":"You can create a GitHub pages website by creating a repository with the name <github-username>.github.io . For more information about GitHub pages, please read through their guide .","title":"Creating a GitHub pages repository"},{"location":"github_pages/#creating-the-domain-file","text":"Create a JSON file inside domains directory ( domains/<subdomain>.json ) with the following content { \"description\" : \"Describe the use of this subdomain\" , \"repo\" : \"https://github.com/<github-username>/<github-username>.github.io\" , \"owner\" : { \"username\" : \"<github-username>\" , \"email\" : \"email@address\" , \"twitter\" : \"<twitter-username>\" }, \"record\" : { \"CNAME\" : \"<username>.github.io\" } }","title":"Creating the domain file"},{"location":"github_pages/#configuring","text":"After the pull request is merged, you will see a 404 error on <your-subdomain>.is-a.dev . To fix this, go to your GitHub pages repository's Settings > GitHub pages > Custom domain and add <your-subdomain>.is-a.dev in the given field. Check the Enforce HTTPS checkbox below the custom domain input.","title":"Configuring"},{"location":"hashnode/","text":"Hashnode Blog When you create your hashnode blog, hashnode provides a free hashnode.dev subdomain for you. However, you can set up your own is-a.dev subdomain. In this guide, you will learn how to accomplish this. Log in to your Hashnode account. Click on your avatar at the bottom-left corner of the page on desktop or top-right corner on mobile . Click on the Blog Dashboard option from the popup modal to access your blog's dashboard. Navigate to the Domain tab and enter your domain without the www or https:// prefix in the text field provided. Then click on the Update button to proceed. Go to your fork of the is-a-dev/register repository, edit your subdomain's JSON file, make sure you remove any old records, then add this: \"CNAME\" : \"hashnode.network\" Once done, your hashnode blog is setup to use your subdomain, all you have to do is wait sometime for the DNS to propogate. These changes could take from 1 hour to around 48 hours, so please be patient, It'll most likely be ready within a hour. Enjoy your hashnode Blog, With Your Sweet .is-a.dev Subdomain! If your need more help: please read this support article on hashnode support: https://support.hashnode.com/docs/mapping-domain/, this should help you more, if you need more help related to Hashnode , then please visit the Hashnode Support Center . Remeber, is-a.dev has no links with hashnode, so please do not create issues on our github, saying that your hashnode blog is having issues, we simply will not respond to them.","title":"Hashnode Blog"},{"location":"hashnode/#hashnode-blog","text":"When you create your hashnode blog, hashnode provides a free hashnode.dev subdomain for you. However, you can set up your own is-a.dev subdomain. In this guide, you will learn how to accomplish this. Log in to your Hashnode account. Click on your avatar at the bottom-left corner of the page on desktop or top-right corner on mobile . Click on the Blog Dashboard option from the popup modal to access your blog's dashboard. Navigate to the Domain tab and enter your domain without the www or https:// prefix in the text field provided. Then click on the Update button to proceed. Go to your fork of the is-a-dev/register repository, edit your subdomain's JSON file, make sure you remove any old records, then add this: \"CNAME\" : \"hashnode.network\" Once done, your hashnode blog is setup to use your subdomain, all you have to do is wait sometime for the DNS to propogate. These changes could take from 1 hour to around 48 hours, so please be patient, It'll most likely be ready within a hour. Enjoy your hashnode Blog, With Your Sweet .is-a.dev Subdomain! If your need more help: please read this support article on hashnode support: https://support.hashnode.com/docs/mapping-domain/, this should help you more, if you need more help related to Hashnode , then please visit the Hashnode Support Center . Remeber, is-a.dev has no links with hashnode, so please do not create issues on our github, saying that your hashnode blog is having issues, we simply will not respond to them.","title":"Hashnode Blog"},{"location":"maintainers/","text":"Reviewing pull requests Publishing records","title":"Maintainer Docs"},{"location":"maintainers/pr_review/","text":"Reviewing pull requests There are a few things you'll need to look out for when reviewing pull requests for domain registrations. This list is not exhaustive and will be updated. CI errors A lot of minor issues will be caught in the CI checks * JSON parsing issues * Schema issues If the CI is failing, tag the user and comment on the pr. Contents of the website We need to make sure that the contents being hosted via the record being registered is not used for malicious purposes. To do this, we must try our best to verify the contents of website and if required ask some questions regarding the contents in the PR. Invalid email/social link A way to contact the user is important in case we need to inform the users of some changes to the project. Confirm if the email looks valid or the social user name/link works. The user should have either an email or a valid social link. \u274c \"owner\": { \"username\": \"gh-username\" } is invalid as it doesn't contain an email or any social links. \u274c \"email\": \"28372878+user-name@users.noreply.github.com\" is invalid as the email cannot be used. \u2705 \"owner\": { \"username\": \"phenax\", \"twitter\": \"twitter-username\" } is valid as it contains a social link. \u2705 \"owner\": { \"username\": \"phenax\", \"email\": \"email@gmail.com\" } is valid as it contains an email. Invalid CNAME record CNAME has to be a hostname. Something like example.com . \u274c http://example.com is invalid as it contains a protocol https:// . \u274c example.com/some/path is invalid as it contains the path name /some/path . \u2705 example.com is valid as it is the hostname of the website. Invalid A record A record has to be an array of ips. \u274c \"A\": \"211.211.211.211\" is invalid as it must be an array. \u274c \"A\": [\"example.com\"] is invalid as it is not an IPv4 addresses. \u2705 \"A\": [\"211.211.211.211\", \"211.211.211.212\"] is valid as it is an array of IPv4 addresses. Invalid URL record The URL must have a protocol ( http:// or https:// ) and must be something like https://example.com or https://example.com/some/path . \u274c example.com is invalid as it doesn't contain the protocol. \u2705 https://example.com/some/path is valid as it contains a protocol. Only one record type Earlier, is-a-dev used to allow for handling https redirections along with CNAME but the way we handle requests has changed since then. This is why a record file can only contain one record type. Either CNAME or A or URL . \u274c \"CNAME\": \"example.com\", \"URL\": \"https://something.com\" is invalid as it should only contain one type of record, either CNAME or URL.","title":"Reviewing pull requests"},{"location":"maintainers/pr_review/#reviewing-pull-requests","text":"There are a few things you'll need to look out for when reviewing pull requests for domain registrations. This list is not exhaustive and will be updated.","title":"Reviewing pull requests"},{"location":"maintainers/pr_review/#ci-errors","text":"A lot of minor issues will be caught in the CI checks * JSON parsing issues * Schema issues If the CI is failing, tag the user and comment on the pr.","title":"CI errors"},{"location":"maintainers/pr_review/#contents-of-the-website","text":"We need to make sure that the contents being hosted via the record being registered is not used for malicious purposes. To do this, we must try our best to verify the contents of website and if required ask some questions regarding the contents in the PR.","title":"Contents of the website"},{"location":"maintainers/pr_review/#invalid-emailsocial-link","text":"A way to contact the user is important in case we need to inform the users of some changes to the project. Confirm if the email looks valid or the social user name/link works. The user should have either an email or a valid social link. \u274c \"owner\": { \"username\": \"gh-username\" } is invalid as it doesn't contain an email or any social links. \u274c \"email\": \"28372878+user-name@users.noreply.github.com\" is invalid as the email cannot be used. \u2705 \"owner\": { \"username\": \"phenax\", \"twitter\": \"twitter-username\" } is valid as it contains a social link. \u2705 \"owner\": { \"username\": \"phenax\", \"email\": \"email@gmail.com\" } is valid as it contains an email.","title":"Invalid email/social link"},{"location":"maintainers/pr_review/#invalid-cname-record","text":"CNAME has to be a hostname. Something like example.com . \u274c http://example.com is invalid as it contains a protocol https:// . \u274c example.com/some/path is invalid as it contains the path name /some/path . \u2705 example.com is valid as it is the hostname of the website.","title":"Invalid CNAME record"},{"location":"maintainers/pr_review/#invalid-a-record","text":"A record has to be an array of ips. \u274c \"A\": \"211.211.211.211\" is invalid as it must be an array. \u274c \"A\": [\"example.com\"] is invalid as it is not an IPv4 addresses. \u2705 \"A\": [\"211.211.211.211\", \"211.211.211.212\"] is valid as it is an array of IPv4 addresses.","title":"Invalid A record"},{"location":"maintainers/pr_review/#invalid-url-record","text":"The URL must have a protocol ( http:// or https:// ) and must be something like https://example.com or https://example.com/some/path . \u274c example.com is invalid as it doesn't contain the protocol. \u2705 https://example.com/some/path is valid as it contains a protocol.","title":"Invalid URL record"},{"location":"maintainers/pr_review/#only-one-record-type","text":"Earlier, is-a-dev used to allow for handling https redirections along with CNAME but the way we handle requests has changed since then. This is why a record file can only contain one record type. Either CNAME or A or URL . \u274c \"CNAME\": \"example.com\", \"URL\": \"https://something.com\" is invalid as it should only contain one type of record, either CNAME or URL.","title":"Only one record type"},{"location":"maintainers/publishing_records/","text":"Publishing records NOTE: This is only for maintainers with publishing access. Currently, the records are published using a manual GitHub actions workflow. When all the PR's are merged and ready: Go to Actions > Publish records . Click Run workflow button to publish merged records. Error Sometimes it may log an error message while publishing saying some record(s) couldn't be published. Usually, the cause is related to some conflict while deleting and re-publishing. In those situations, running the workflow again will fix the issues.","title":"Publishing records"},{"location":"maintainers/publishing_records/#publishing-records","text":"NOTE: This is only for maintainers with publishing access. Currently, the records are published using a manual GitHub actions workflow. When all the PR's are merged and ready: Go to Actions > Publish records . Click Run workflow button to publish merged records.","title":"Publishing records"},{"location":"maintainers/publishing_records/#error","text":"Sometimes it may log an error message while publishing saying some record(s) couldn't be published. Usually, the cause is related to some conflict while deleting and re-publishing. In those situations, running the workflow again will fix the issues.","title":"Error"},{"location":"other/","text":"Setting up other services with is-a.dev Setting up records Read the domain file structure and setup the records accordingly. Configuring your server After the pull request is merged, configure your server (apache, nginx, etc.) to work with <subdomain>.is-a.dev . If you are unsure how to configure your server, you can create an issue for support. You should also, include <subdomain>.is-a.dev in your ssl certificate to get rid of certificate errors.","title":"Other services"},{"location":"other/#setting-up-other-services-with-is-adev","text":"","title":"Setting up other services with is-a.dev"},{"location":"other/#setting-up-records","text":"Read the domain file structure and setup the records accordingly.","title":"Setting up records"},{"location":"other/#configuring-your-server","text":"After the pull request is merged, configure your server (apache, nginx, etc.) to work with <subdomain>.is-a.dev . If you are unsure how to configure your server, you can create an issue for support. You should also, include <subdomain>.is-a.dev in your ssl certificate to get rid of certificate errors.","title":"Configuring your server"}]}